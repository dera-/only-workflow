name: Publish And Release

on:
  workflow_dispatch:
    inputs:
      git_repository:
        description: Git repository
        required: true
      target_branch:
        description: Target branch
        required: true
        default: master
      target_tag:
        description: Target tag
        required: true
        default: latest
      additional_target_tag:
        description: npm の publish 時に target_tag に加えて付与される tag である。利用例：akashic-engine v3 系のライブラリを publish する時に latest タグとは別に for_ae3x タグにも残したい場合。
        required: false

env:
  NODE_VERSION: 12

jobs:
  release_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repository
        uses: actions/checkout@v2
        with:
          path: workflows
      - name: Checkout target repository
        uses: actions/checkout@v2
        with:
          repository: dera-/${{ env.GIT_REPOSITORY }}
          ref: ${{ env.TARGET_BRANCH }}
          path: target
        env:
          GIT_REPOSITORY: ${{ github.event.inputs.git_repository }}
          TARGET_BRANCH: ${{ github.event.inputs.target_branch }}
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install
        working-directory: workflows
      - name: Prepare publish
        run: |
          npm install
          npm test
        working-directory: target
      - name: Check dir
        run: pwd && ls -la && echo ${{ github.workspace }}
        working-directory: workflows
      - name: Choose npm token
        id: npm_token
        uses: dera-/action-sample/chooseNpmToken@master
        with:
          target_dir: target
          npm_token_for_akashic: ${{ env.NPM_TOKEN }}
          npm_token_for_akashic_extension: ${{ env.EXTENSION_NPM_TOKEN }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          EXTENSION_NPM_TOKEN: ${{ secrets.EXTENSION_NPM_TOKEN }}
      - name: Publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ env.NPM_TOKEN }}
          package: ${{ github.workspace }}/target/package.json
          tag: ${{ env.TARGET_TAG }}
          access: public
        env:
          NPM_TOKEN: ${{ steps.npm_token.outputs.token }}
          TARGET_TAG: ${{ github.event.inputs.target_tag }}
      - name: Read package.json
        id: package_json
        run: echo "::set-output name=content::$(cat ${{ github.workspace }}/package.json | tr -d '\n')"
        working-directory: target
      - name: Add dist tag
        if: ${{ env.ADDITIONAL_TARGET_TAG }}
        run: npm dist-tag add $PACKAGE_NAME@$PACKAGE_VERSION $ADDITIONAL_TARGET_TAG
        env:
          INPUT_TOKEN: ${{ steps.npm_token.outputs.token }}
          PACKAGE_NAME: ${{ fromJson(steps.package_json.outputs.content).name }}
          PACKAGE_VERSION: ${{ fromJson(steps.package_json.outputs.content).version }}
          ADDITIONAL_TARGET_TAG: ${{ github.event.inputs.additional_target_tag }}
      - name: Generate release note
        id: release_note
        uses: dera-/action-sample/generateReleaseNote@master
        with:
          repository_path: ${{ github.workspace }}/target
      - name: Create release note
        uses: actions/create-release@master
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: ${{ env.RELEASE_BODY }}
          draft: false
          prerelease: false
          commitish: ${{ env.TARGET_BRANCH }}
          owner: dera-
          repo: ${{ env.GIT_REPOSITORY }}
        env:
          # 他リポジトリに対して操作を行う場合secret.GITHUB_TOKENとは別にgithubトークンを利用する必要があるためsecret.GH_TOKENを用意
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          RELEASE_VERSION: ${{ steps.release_note.outputs.version }}
          RELEASE_BODY: ${{ steps.release_note.outputs.body }}
          GIT_REPOSITORY: ${{ github.event.inputs.git_repository }}
          TARGET_BRANCH: ${{ github.event.inputs.target_branch }}
