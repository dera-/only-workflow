name: Publish And Release

on:
  workflow_dispatch:
    inputs:
      git_repository:
        description: 'Git Repository'
        required: true
      target_branch:
        description: 'Target Branch'
        required: true
        default: 'master'
      target_tag:
        description: 'Target Tag'
        required: true
        default: 'latest'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Target Repository
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.git_repository }}
          ref: ${{ github.event.inputs.target_branch }}
      # - name: Check File
      #   run: |
      #     pwd
      #     ls -la
      #     find / -name action.yml
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ env.cache-version }}-${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-version }}-${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ env.cache-version }}-${{ runner.os }}-build-
            ${{ env.cache-version }}-${{ runner.os }}-
      - name: Publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_TOKEN }}
          tag: ${{ github.event.inputs.target_tag }}
          access: "public"
      - name: Checkout This Repository
        uses: actions/checkout@v2
        with:
          path: workflow
      - name: Npm Install
        run: |
          cd workflow
          npm install
      - name: Get Release Note
        id: releaseNote
        uses: ./workflow/getReleaseNote
      - name: Create Release Note
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.releaseNote.outputs.version }}
          release_name: Release v${{ steps.releaseNote.outputs.version }}
          body: ${{ steps.releaseNote.outputs.body }}
          draft: false
          prerelease: false
          repo: ${{ github.event.inputs.git_repository }}
